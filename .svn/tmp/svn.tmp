package kjy.rating_history.controller;

import java.util.ArrayList;
import java.util.List;

import javax.inject.Inject;

import org.apache.log4j.spi.LoggerFactory;
import org.slf4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import kjy.rating_history.dto.AvgDTO;
import kjy.rating_history.dto.RatingHistoryDTO;
import kjy.rating_history.service.RatingHistoryEnrollment;
import lee.chatting.dto.ChatRoomDTO;

@Controller

@RequestMapping("/rating/*") // views 폴더
@ComponentScan("lee.chatting.*")
public class RatingHistoryController {
	private static final Logger LOGGER = org.slf4j.LoggerFactory.getLogger(RatingHistoryController.class);
	// 주입
	@Inject
	private RatingHistoryEnrollment enrollment;
	// post , 리퀘스트 맵핑 ENROLLMENT

	@Autowired
	private ArrayList<ChatRoomDTO> list;

	@RequestMapping(value = "/Enrollment", method = RequestMethod.GET)
	public String registerGET(@RequestParam("roomNumber") String roomNumber, Model model) throws Exception {
		LOGGER.info("Enro" + "llment get ..........");
		String mentorID = null;
		String menteeID = null;
		int roomNum = Integer.parseInt(roomNumber);

		for (ChatRoomDTO selectChatRoom : list) {

			if (roomNum == selectChatRoom.getChatRoomNum()) {

				mentorID = selectChatRoom.getMentorID();
				menteeID = selectChatRoom.getMenteeID();
			}

		}

		model.addAttribute("mentor_id", mentorID);
		model.addAttribute("buyer", menteeID);
		
		return "rating_history/ratingwrite";
	}

	@RequestMapping(value = "/Enrollment", method = RequestMethod.POST)
	public String registerPOST(RatingHistoryDTO dto, Model model) throws Exception {
		LOGGER.info("Enro" + "llment get ..........");
		System.out.println(dto); // 찍기
		enrollment.Enrollment(dto);
		return "rating_history/complete";
	}

	// @RequestMapping(value = "/Enrollment", method = RequestMethod.GET)
	// public String registerGETs() throws Exception{
	// LOGGER.info("Enrollment get ..........");
	//// service
	//
	// return "rating_history/view";
	// }

	@RequestMapping(value = "/read", method = RequestMethod.GET)
	public String read(Model model) throws Exception {
		List<AvgDTO> list = enrollment.getAvg();
		model.addAttribute("list", list);
		return "/rating_history/admin";
	}

}
